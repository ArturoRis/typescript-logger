{"version":3,"sources":["../src/log.ts"],"names":[],"mappings":"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","file":"log.js","sourcesContent":["import {Logger} from \"./logger\";\nimport {Level} from \"./level\";\n\nimport {contain} from \"./include\";\n\nexport class Log {\n\n    private static instances = {};\n\n    static create<TA>(_console:any, name: string, ...level: Level[]): Logger<TA> {\n        let i: Logger<TA>;\n        if (Log.instances[name] === undefined) {\n            i = new Logger<TA>(\n                name,\n                Log.getRandomColor(),\n                level,\n                Log.isMutedModule(name),\n                Log.levels.length > 0 ? Log.fixedWidth : undefined,\n                _console\n            );\n            Log.instances[name] = i;\n        } else {\n            i = Log.instances[name];\n        }\n        return i;\n    }\n\n    private static getRandomColor(): any {\n        let letters = '012345'.split('');\n        let color = '#';\n        color += letters[Math.round(Math.random() * 5)];\n        letters = '0123456789ABCDEF'.split('');\n        for (let i = 0; i < 5; i++) {\n            color += letters[Math.round(Math.random() * 15)];\n        }\n        if (color === undefined) return this.getRandomColor();\n        return color;\n    }\n\n    private static fixedWidth = 0;\n    private static levels: Level[] = [];\n\n    static onlyLevel(...level: Level[]) {\n        if (level.length === 0) return;\n        Log.levels = level;\n    }\n\n    static getAllowedLevels(): Level[] {\n        return this.levels;\n    }\n\n    private static modules: string[] = [];\n\n    static onlyModules(...modules: string[]) {\n        if (modules.length === 0) return;\n        Log.unMuteAllModules();\n        Log.modules = modules;\n        Log.muteAllOtherModules();\n    }\n\n    private static isMutedModule(moduleName: string): boolean {\n        if (Log.modules.length == 0) return false;\n        if (!contain(Log.modules, moduleName)) return true;\n        return false;\n    }\n\n    private static muteAllOtherModules() {\n        for (let moduleName in Log.instances) {\n            if (!contain(Log.modules, moduleName))\n                Log.instances[moduleName].mute()\n        }\n    }\n\n    private static unMuteAllModules() {\n        for (let moduleName in Log.instances) {\n            Log.instances[moduleName].unMute();\n        }\n    }\n\n    private static isDevelopmentMode = true;\n\n    static setProductionMode() {\n        Log.isDevelopmentMode = false;\n    }\n\n    static setDevelopmentMode() {\n        Log.isDevelopmentMode = true;\n    }\n\n    static isProductionMode(): boolean {\n        return !Log.isDevelopmentMode;\n    }\n}\n"]}